- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enabling nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: installing nodejs
  ansible.builtin.dnf: # only works for redhat enterprise
    name: "{{ item }}"
    state: installed
  loop:
    - nodejs
    - mysql

- name: creating expense user
  ansible.builtin.user:
    name: expense

- name: run app pre-requeisites 
  tags:
  - deployment
  ansible.builtin.import_role:
    role: common
    tasks_from: app_pre_req

- name: installing npm dependencies on /app directory
  tags: 
  - deployment
  ansible.builtin.command: npm install 
  args:
    chdir: /app # first changes its directory, then install npm dependencies

- name: copy backend service 
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service # copy backend.service to dest: /etc/systemd/*

  #Ansible is develped in python
#now we are connecting to mysql from ansible which is develped by python
#PyMySQL is a dependency for python to connect mysql servers
- name: installing python mysql dependencies
  ansible.builtin.pip: #pip is used to install python dependencies
    name:
    - PyMySQL # to connect MySQL db from ansible
    - cryptography
    executable:  pip3.9 # pip 3.11 if python version is 3.11
- name: import data into mysql
  ansible.builtin.mysql_db:
    login_user: "{{login_user}}"
    login_password: "{{mysql_root_password}}"
    login_host: "{{login_host}}"
    target: /app/schema/backend.sql
    state: import
    name: all

- name: daemon reload service
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: start and enable backend service
  tags:
  - deployment
  ansible.builtin.service:
    name: backend
    state: restarted
    enabled: yes